Module Name 
	qterm -- the module for every BBS connection

Methods
	formatPythonError(string err)
		give the error message

	(string,int success) copyArticle(long lp, int timeout)
		download the current article in given timeout seconds,
		return success=0 when timeout, otherwise 1
	
	string copyArticle(long lp, bool colorful = false) (obsolete)
		download the current article, you can use it without setting colorful, and by default it is false(in order to back compatible ),if colorful is true ,the article is colorful.else ,the article is not colorful

	string getText(long lp, int line) 		
		get text at line

	string getAttrText(long lp,int line,string escape)
		the same with above, but with *[

	int caretX(long lp)
		caret postion x

	int caretY(long lp)
		caret postion y

	int coulomns(long lp)
		coulomns in buffer

	int rows(long lp)
		lines in buffer

	sendString(long lp,string str) 
		send string to server

	sendParsedString(long lp, string str) 		
		send string after parsed with such as "\n","^p"

	int isConnected(long lp)
		if current session is connected. 
	
	string getAddress(long lp)
		get bbs address

	int getPort(long lp)
		get bbs port
	
	int getProtocol(long lp)
		get bbs protocol

	string getReplyKey(long lp)
		get the key string to reply message

	string getURL(long lp)
		get the url under mouse

	previewImage(long lp, string url)
		download and preview image url
		
	reconnect(long lp)
		reconnect to host

	disconnect(long lp)
		disconnect from host
	
	fromUTF8(string str, string codec)
		decode str from utf8 to codec

	toUTF8(string str, string codec)
		decode str from codec to utf8
		
Example Code
	1. download 4 continuous articles
		import qterm
		import sys, time
		lp=long(sys.argv[0])
		f=open("/home/kingson/test.txt","w")
		for i in range(4):
			qterm.sendString(lp,"r")
			f.write(qterm.copyArticle(lp))
			f.write("="*80)
			f.write("\n\n")
			qterm.sendString(lp,"q")
			qterm.sendString(lp,"j")
			time.sleep(5)
		f.close()

Bugs
	1.

TODO:
	1. add some GUI for control, e.g. stop, pause, resume,  inside script

